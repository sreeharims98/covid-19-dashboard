{"version":3,"sources":["assets/COVID19.png","components/cards/Cards.jsx","api/index.js","components/countryPicker/CountryPicker.jsx","components/chart/Chart.jsx","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","className","title","hoverable","headStyle","color","height","bodyStyle","fontWeight","backgroundColor","start","end","value","duration","separator","recovered","deaths","url","fetchData","country","a","changeableUrl","Axios","get","modifiedData","lastUpdate","lastupdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setfetchedCountries","useEffect","FetchCountryAPI","id","showSearch","style","onChange","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","Option","i","key","Chart","dailyData","setDailyData","initialDailyData","fetchMyAPI","lineChart","labels","datasets","label","borderColor","fill","barChart","options","legend","display","text","Content","Layout","Footer","App","state","fetchedData","setState","this","src","covid19","alt","marginTop","padding","minHeight","textAlign","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c06de03a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/COVID19.d757f33c.png\";","import React from \"react\";\r\nimport \"./Cards.css\";\r\nimport { Card, Spin } from \"antd\";\r\nimport Countup from \"react-countup\";\r\nexport const Cards = ({ data }) => {\r\n  if (!data.confirmed) {\r\n    return <Spin />;\r\n  }\r\n  return (\r\n    <div className=\"all-cards\">\r\n      <Card\r\n        className=\"card\"\r\n        title=\"CONFIRMED\"\r\n        hoverable\r\n        headStyle={{\r\n          color: \"blue\",\r\n          height: \"50px\",\r\n        }}\r\n        bodyStyle={{\r\n          fontWeight: \"bold\",\r\n          backgroundColor: \"blue\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        <Countup\r\n          start={0}\r\n          end={data.confirmed.value}\r\n          duration={1.0}\r\n          separator=\",\"\r\n        />\r\n      </Card>\r\n      <Card\r\n        className=\"card\"\r\n        title=\"RECOVERED\"\r\n        hoverable\r\n        headStyle={{\r\n          color: \"green\",\r\n          height: \"50px\",\r\n        }}\r\n        bodyStyle={{\r\n          fontWeight: \"bold\",\r\n          backgroundColor: \"green\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        <Countup\r\n          start={0}\r\n          end={data.recovered.value}\r\n          duration={1.0}\r\n          separator=\",\"\r\n        />\r\n      </Card>\r\n      <Card\r\n        className=\"card\"\r\n        title=\"DEATHS\"\r\n        hoverable\r\n        headStyle={{\r\n          color: \"red\",\r\n          height: \"50px\",\r\n        }}\r\n        bodyStyle={{\r\n          fontWeight: \"bold\",\r\n          backgroundColor: \"red\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        <Countup\r\n          start={0}\r\n          end={data.deaths.value}\r\n          duration={1.0}\r\n          separator=\",\"\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import Axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const { data } = await Axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed: data.confirmed,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastupdate,\r\n      recovered: data.recovered,\r\n    };\r\n    // console.log(modifiedData);\r\n    return modifiedData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await Axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date,\r\n    }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await Axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./CountryPicker.css\";\r\nimport { Select } from \"antd\";\r\nimport \"../../api\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nexport const CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setfetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const FetchCountryAPI = async () => {\r\n      setfetchedCountries(await fetchCountries());\r\n    };\r\n    FetchCountryAPI();\r\n  }, [setfetchedCountries]);\r\n\r\n  function onChange(value) {\r\n    handleCountryChange(value);\r\n  }\r\n  // console.log(fetchedCountries);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"components-dropdown-demo-dropdown-button\">\r\n        <Select\r\n          className=\"select\"\r\n          showSearch\r\n          style={{}}\r\n          onChange={onChange}\r\n          placeholder=\"Global\"\r\n          optionFilterProp=\"children\"\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          <Select.Option value=\"\">Global</Select.Option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <Select.Option key={i} value={country}>\r\n              {country}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport \"./Chart.css\";\r\n\r\nexport const Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n      // console.log(initialDailyData);\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  // console.log(confirmed, recovered, deaths);\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"people\",\r\n            backgroundColor: [\"blue\", \"green\", \"red\"],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current State In ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className=\"chartContainer\">{country ? barChart : lineChart}</div>;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Cards } from \"./components/cards/Cards\";\r\nimport { CountryPicker } from \"./components/countryPicker/CountryPicker\";\r\nimport { Chart } from \"./components/chart/Chart\";\r\nimport \"./App.css\";\r\nimport { fetchData } from \"./api\";\r\nimport covid19 from \"./assets/COVID19.png\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Content, Footer } = Layout;\r\nexport default class App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n    // console.log(fetchedData);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"navbar\">\r\n          <div className=\"logo\">\r\n            <img src={covid19} alt=\"COVID 19\" />\r\n          </div>\r\n          <div className=\"picker\">\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n          </div>\r\n        </div>\r\n\r\n        <Layout>\r\n          <Content className=\"site-layout\" style={{ marginTop: 34 }}>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 0, minHeight: 380 }}\r\n            >\r\n              <Cards data={this.state.data} />\r\n              <Chart data={this.state.data} country={this.state.country} />\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Corona Virus (COVID-19) Live Dashboard\r\n          </Footer>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}